# docker-compose.yml - Avicoo E-commerce Platform
version: '3.8'

services:
  # Base de données PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: avicoo-db
    environment:
      POSTGRES_DB: avicoo
      POSTGRES_USER: avicoo
      POSTGRES_PASSWORD: avicoo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - avicoo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U avicoo -d avicoo"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend FastAPI
  backend:
    build: ./avicoo-backend
    container_name: avicoo-backend
    environment:
      - DATABASE_URL=postgresql+psycopg://avicoo:avicoo@db:5432/avicoo
      - SECRET_KEY=avicoo_secret_key_change_in_production
      - ACCESS_TOKEN_EXPIRE_MINUTES=1440
      - CORS_ORIGINS=["http://localhost:5173","http://localhost:8080"]
      - MIN_DELIVERY_QUANTITY=5
      - DELIVERY_FEE=1000
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - avicoo-network
    volumes:
      - ./avicoo-backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend Vue.js (à créer plus tard)
  # frontend:
  #   build: ./avicoo-frontend
  #   container_name: avicoo-frontend
  #   ports:
  #     - "5173:5173"
  #   depends_on:
  #     - backend
  #   networks:
  #     - avicoo-network
  #   volumes:
  #     - ./avicoo-frontend:/app
  #   command: npm run dev -- --host 0.0.0.0 --port 5173

  # Nginx Reverse Proxy (à activer plus tard)
  # nginx:
  #   image: nginx:alpine
  #   container_name: avicoo-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #   depends_on:
  #     - backend
  #     - frontend
  #   networks:
  #     - avicoo-network

volumes:
  postgres_data:

networks:
  avicoo-network:
    driver: bridge
